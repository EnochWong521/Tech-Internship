import qi
import argparse
import sys
import time
import almath

def main(session):

    tts = session.service("ALTextToSpeech")
    motion_service  = session.service("ALMotion")

    #Speak
    tts.setLanguage("English")
    tts.say("I am a robot")

    times = 1.0
    isAbsolute = True
    maxSpeedFraction = 0.2

    #set forearm to optimal position
    names = ["LElbowYaw","RElbowYaw","LShoulderRoll","RShoulderRoll"]
    angleLists = [-90*almath.TO_RAD,90*almath.TO_RAD,30*almath.TO_RAD,-30*almath.TO_RAD]
    motion_service.angleInterpolation(names, angleLists, times, isAbsolute)
    time.sleep(1.0)

    #Move left arm
    names = ["LElbowRoll","LShoulderPitch","HeadYaw","HeadPitch"]
    angleLists = [-45*almath.TO_RAD,60*almath.TO_RAD,60*almath.TO_RAD,35*almath.TO_RAD]
    motion_service.angleInterpolation(names, angleLists, times, isAbsolute)
    time.sleep(1.0)

    #Move right arm
    names = ["RElbowRoll","RShoulderPitch","HeadYaw","HeadPitch"]
    angleLists = [45*almath.TO_RAD,60*almath.TO_RAD,-60*almath.TO_RAD,35*almath.TO_RAD]
    motion_service.angleInterpolation(names, angleLists, times, isAbsolute)
    time.sleep(1.0)

    #Move left arm more
    names = ["LElbowRoll","LShoulderPitch","HeadYaw","HeadPitch"]
    angleLists = [90*almath.TO_RAD,30*almath.TO_RAD,35*almath.TO_RAD,20*almath.TO_RAD]
    motion_service.angleInterpolation(names, angleLists, times, isAbsolute)
    time.sleep(1.0)

    #Move right arm more
    names = ["RElbowRoll","RShoulderPitch","HeadYaw","HeadPitch"]
    angleLists = [90*almath.TO_RAD,30*almath.TO_RAD,-30*almath.TO_RAD,0.0]
    motion_service.angleInterpolation(names, angleLists, times, isAbsolute)
    time.sleep(1.0)

    motion_service.rest()


if __name__ == "__main__":
    parser = argparse.ArgumentParser()
    parser.add_argument("--ip", type=str, default="172.18.5.223",
                        help="Robot IP address. On robot or Local Naoqi: use '172.18.5.223'.")
    parser.add_argument("--port", type=int, default=9559,
                        help="Naoqi port number")

    args = parser.parse_args()
    session = qi.Session()
    try:
        session.connect("tcp://" + args.ip + ":" + str(args.port))
    except RuntimeError:
        print ("Can't connect to Naoqi at ip \"" + args.ip + "\" on port " + str(args.port) +".\n"
               "Please check your script arguments. Run with -h option for help.")
        sys.exit(1)
    main(session)
